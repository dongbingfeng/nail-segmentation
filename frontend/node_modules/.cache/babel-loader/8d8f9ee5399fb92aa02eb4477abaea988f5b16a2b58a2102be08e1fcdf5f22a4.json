{"ast":null,"code":"var _jsxFileName = \"/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/LabelingInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport ToolPalette from './ToolPalette';\nimport { useImageNavigation } from '../contexts/ImageNavigationContext';\nimport { samService } from '../services/samService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelingInterface = () => {\n  _s();\n  const [selectedTool, setSelectedTool] = useState('select');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [samPoints, setSamPoints] = useState([]);\n  const [maskPoints, setMaskPoints] = useState([]);\n  const {\n    currentImageData,\n    annotations,\n    updateAnnotations,\n    saveCurrentAnnotations,\n    isLoading,\n    error\n  } = useImageNavigation();\n\n  // Auto-save annotations when they change\n  useEffect(() => {\n    const autoSaveTimer = setTimeout(() => {\n      if (annotations.length > 0) {\n        saveCurrentAnnotations(annotations);\n      }\n    }, 2000); // Auto-save after 2 seconds of inactivity\n\n    return () => clearTimeout(autoSaveTimer);\n  }, [annotations, saveCurrentAnnotations]);\n  const handleToolSelect = tool => {\n    setSelectedTool(tool);\n  };\n  const handleAnnotationCreate = async annotationData => {\n    if (!currentImageData) return;\n    try {\n      // Generate temporary ID for now - will be replaced with API response\n      const newAnnotation = {\n        ...annotationData,\n        id: `temp-${Date.now()}`,\n        imageId: currentImageData.id,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      const updatedAnnotations = [...annotations, newAnnotation];\n      updateAnnotations(updatedAnnotations);\n      console.log('Created annotation:', newAnnotation);\n    } catch (err) {\n      console.error('Error creating annotation:', err);\n    }\n  };\n  const handleAnnotationUpdate = async (id, updates) => {\n    try {\n      const updatedAnnotations = annotations.map(annotation => annotation.id === id ? {\n        ...annotation,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      } : annotation);\n      updateAnnotations(updatedAnnotations);\n      console.log('Updated annotation:', id, updates);\n    } catch (err) {\n      console.error('Error updating annotation:', err);\n    }\n  };\n  const handleAnnotationDelete = async id => {\n    try {\n      const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n      updateAnnotations(updatedAnnotations);\n      console.log('Deleted annotation:', id);\n    } catch (err) {\n      console.error('Error deleting annotation:', err);\n    }\n  };\n  const handleSamPointClick = (point, label = 1) => {\n    // Add point to SAM points collection\n    setSamPoints(prev => [...prev, {\n      ...point,\n      label\n    }]);\n  };\n  const handleClearSamPoints = () => {\n    setSamPoints([]);\n    setMaskPoints([]);\n  };\n  const handleSamProcess = async () => {\n    if (!currentImageData || samPoints.length === 0) {\n      console.warn('No image or SAM points available');\n      return;\n    }\n\n    // Find a bounding box from existing annotations or create a default one\n    let boundingBox = {\n      topLeft: {\n        x: 0,\n        y: 0\n      },\n      bottomRight: {\n        x: currentImageData.width,\n        y: currentImageData.height\n      }\n    };\n\n    // Use the first bounding box annotation if available\n    const bboxAnnotation = annotations.find(ann => ann.type === 'bounding_box');\n    if (bboxAnnotation && bboxAnnotation.coordinates.width && bboxAnnotation.coordinates.height) {\n      boundingBox = {\n        topLeft: {\n          x: bboxAnnotation.coordinates.x,\n          y: bboxAnnotation.coordinates.y\n        },\n        bottomRight: {\n          x: bboxAnnotation.coordinates.x + bboxAnnotation.coordinates.width,\n          y: bboxAnnotation.coordinates.y + bboxAnnotation.coordinates.height\n        }\n      };\n    }\n    setIsProcessing(true);\n    try {\n      console.log('Processing with SAM...', {\n        imageId: currentImageData.id,\n        boundingBox,\n        points: samPoints\n      });\n\n      // Prepare SAM request with new interface\n      const samRequest = {\n        imageId: currentImageData.id,\n        boundingBox,\n        points: samPoints.map(p => ({\n          x: p.x,\n          y: p.y\n        })),\n        labels: samPoints.map(p => p.label)\n      };\n\n      // Call real SAM service\n      const result = await samService.processSegmentation(samRequest);\n      if (result.success) {\n        // Handle mask_points if they exist in the response\n        if (result.mask_points && result.mask_points.length > 0) {\n          console.log('Received mask points:', result.mask_points);\n          setMaskPoints(result.mask_points);\n        } else {\n          setMaskPoints([]); // Clear existing mask points if none received\n        }\n        // Show mask points details in a dialog\n        if (result.mask_points && result.mask_points.length > 0) {\n          const maskPointsCount = result.mask_points.length;\n          const dialogContent = /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Mask Points Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Total mask points: \", maskPointsCount]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"First 5 points: \", result.mask_points.slice(0, 5).map((point, i) => `(${point[0]}, ${point[1]})${i < 4 ? ', ' : ''}`)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Last 5 points: \", result.mask_points.slice(-5).map((point, i) => `(${point[0]}, ${point[1]})${i < 4 ? ', ' : ''}`)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this);\n\n          // Show dialog using the existing dialog system\n          setDialogContent(dialogContent);\n          setShowDialog(true);\n        }\n        // Convert SAM masks to annotations if they exist\n        if (result.masks.length > 0) {\n          result.masks.forEach((mask, index) => {\n            const samAnnotation = {\n              id: `sam-${Date.now()}-${index}`,\n              imageId: currentImageData.id,\n              type: 'segmentation',\n              coordinates: {\n                x: Math.min(...mask.points.map(p => p.x)),\n                y: Math.min(...mask.points.map(p => p.y)),\n                points: mask.points\n              },\n              label: `sam-nail-${annotations.length + index + 1}`,\n              confidence: mask.confidence,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString()\n            };\n            const updatedAnnotations = [...annotations, samAnnotation];\n            updateAnnotations(updatedAnnotations);\n          });\n        }\n\n        // Clear SAM points after successful processing\n        setSamPoints([]);\n        console.log('SAM processing completed successfully');\n      } else {\n        // Clear mask points on failure\n        setMaskPoints([]);\n        console.error('SAM processing failed:', result.error);\n        alert(`SAM processing failed: ${result.error || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error processing with SAM:', err);\n      alert(`SAM processing error: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '400px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        borderRadius: '8px',\n        border: '1px solid #ef5350'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          padding: '0.5rem 1rem',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentImageData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: \"No image data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      padding: '1rem',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        flexShrink: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToolPalette, {\n        selectedTool: selectedTool,\n        onToolSelect: handleToolSelect,\n        onSamProcess: handleSamProcess,\n        onClearSamPoints: handleClearSamPoints,\n        isProcessing: isProcessing,\n        samPointsCount: samPoints.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          padding: '1rem',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          flex: 1,\n          minHeight: 0,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 1rem 0',\n            fontSize: '1.1rem',\n            color: '#333'\n          },\n          children: [\"Annotations (\", annotations.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), annotations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            fontSize: '0.9rem',\n            margin: 0\n          },\n          children: \"No annotations yet. Use the tools above to create some.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            overflowY: 'auto',\n            minHeight: 0\n          },\n          children: annotations.map((annotation, index) => {\n            var _annotation$coordinat;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '0.5rem',\n                marginBottom: '0.5rem',\n                backgroundColor: '#fff',\n                borderRadius: '4px',\n                border: '1px solid #ddd',\n                fontSize: '0.9rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '0.25rem'\n                },\n                children: [annotation.type === 'bounding_box' ? '📦' : '🎯', \" \", annotation.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#666',\n                  fontSize: '0.8rem'\n                },\n                children: [annotation.type === 'bounding_box' ? `${Math.round(annotation.coordinates.x)}, ${Math.round(annotation.coordinates.y)} - ${Math.round(annotation.coordinates.width || 0)}×${Math.round(annotation.coordinates.height || 0)}` : `${((_annotation$coordinat = annotation.coordinates.points) === null || _annotation$coordinat === void 0 ? void 0 : _annotation$coordinat.length) || 0} points`, annotation.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" (conf: \", Math.round(annotation.confidence * 100), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAnnotationDelete(annotation.id),\n                style: {\n                  marginTop: '0.25rem',\n                  padding: '0.25rem 0.5rem',\n                  backgroundColor: '#ff4444',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '3px',\n                  fontSize: '0.8rem',\n                  cursor: 'pointer'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 349,\n                columnNumber: 19\n              }, this)]\n            }, annotation.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        minWidth: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem',\n          padding: '0.75rem 1rem',\n          backgroundColor: '#e3f2fd',\n          borderRadius: '6px',\n          border: '1px solid #1976d2',\n          flexShrink: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: '#1976d2'\n          },\n          children: currentImageData.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            color: '#1565c0'\n          },\n          children: [\"Current tool: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedTool.replace('_', ' ').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 27\n          }, this), \" | Image: \", currentImageData.width, \"\\xD7\", currentImageData.height, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflow: 'auto',\n          minHeight: 0,\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: /*#__PURE__*/_jsxDEV(ImageCanvas, {\n          imageUrl: currentImageData.url,\n          annotations: annotations,\n          selectedTool: selectedTool,\n          onAnnotationCreate: handleAnnotationCreate,\n          onAnnotationUpdate: handleAnnotationUpdate,\n          onAnnotationDelete: handleAnnotationDelete,\n          onSamPointClick: handleSamPointClick,\n          samPoints: samPoints,\n          maskPoints: maskPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n};\n_s(LabelingInterface, \"OxJmcn/hmuUFuccragpymh9ZjMI=\", false, function () {\n  return [useImageNavigation];\n});\n_c = LabelingInterface;\nexport default LabelingInterface;\nvar _c;\n$RefreshReg$(_c, \"LabelingInterface\");","map":{"version":3,"names":["React","useState","useEffect","ImageCanvas","ToolPalette","useImageNavigation","samService","jsxDEV","_jsxDEV","LabelingInterface","_s","selectedTool","setSelectedTool","isProcessing","setIsProcessing","samPoints","setSamPoints","maskPoints","setMaskPoints","currentImageData","annotations","updateAnnotations","saveCurrentAnnotations","isLoading","error","autoSaveTimer","setTimeout","length","clearTimeout","handleToolSelect","tool","handleAnnotationCreate","annotationData","newAnnotation","id","Date","now","imageId","createdAt","toISOString","updatedAt","updatedAnnotations","console","log","err","handleAnnotationUpdate","updates","map","annotation","handleAnnotationDelete","filter","handleSamPointClick","point","label","prev","handleClearSamPoints","handleSamProcess","warn","boundingBox","topLeft","x","y","bottomRight","width","height","bboxAnnotation","find","ann","type","coordinates","points","samRequest","p","labels","result","processSegmentation","success","mask_points","maskPointsCount","dialogContent","children","fileName","_jsxFileName","lineNumber","columnNumber","slice","i","setDialogContent","setShowDialog","masks","forEach","mask","index","samAnnotation","Math","min","confidence","alert","Error","message","style","display","justifyContent","alignItems","backgroundColor","borderRadius","padding","textAlign","color","border","onClick","window","location","reload","cursor","gap","overflow","flexShrink","flexDirection","onToolSelect","onSamProcess","onClearSamPoints","samPointsCount","boxShadow","flex","minHeight","margin","fontSize","overflowY","_annotation$coordinat","marginBottom","fontWeight","round","marginTop","minWidth","filename","replace","toUpperCase","imageUrl","url","onAnnotationCreate","onAnnotationUpdate","onAnnotationDelete","onSamPointClick","_c","$RefreshReg$"],"sources":["/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/LabelingInterface.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport ToolPalette from './ToolPalette';\nimport { useImageNavigation } from '../contexts/ImageNavigationContext';\nimport { Annotation, SAMRequest } from '../types/annotations';\nimport { samService } from '../services/samService';\n\nconst LabelingInterface: React.FC = () => {\n  const [selectedTool, setSelectedTool] = useState<'select' | 'bounding_box' | 'sam_point'>('select');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [samPoints, setSamPoints] = useState<Array<{x: number, y: number, label: number}>>([]);\n  const [maskPoints, setMaskPoints] = useState<Array<{x: number, y: number}>>([]);\n  \n  const {\n    currentImageData,\n    annotations,\n    updateAnnotations,\n    saveCurrentAnnotations,\n    isLoading,\n    error\n  } = useImageNavigation();\n\n  // Auto-save annotations when they change\n  useEffect(() => {\n    const autoSaveTimer = setTimeout(() => {\n      if (annotations.length > 0) {\n        saveCurrentAnnotations(annotations);\n      }\n    }, 2000); // Auto-save after 2 seconds of inactivity\n\n    return () => clearTimeout(autoSaveTimer);\n  }, [annotations, saveCurrentAnnotations]);\n\n  const handleToolSelect = (tool: string) => {\n    setSelectedTool(tool as 'select' | 'bounding_box' | 'sam_point');\n  };\n\n  const handleAnnotationCreate = async (annotationData: Omit<Annotation, 'id' | 'createdAt' | 'updatedAt'>) => {\n    if (!currentImageData) return;\n    \n    try {\n      // Generate temporary ID for now - will be replaced with API response\n      const newAnnotation: Annotation = {\n        ...annotationData,\n        id: `temp-${Date.now()}`,\n        imageId: currentImageData.id,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      const updatedAnnotations = [...annotations, newAnnotation];\n      updateAnnotations(updatedAnnotations);\n      \n      console.log('Created annotation:', newAnnotation);\n    } catch (err) {\n      console.error('Error creating annotation:', err);\n    }\n  };\n\n  const handleAnnotationUpdate = async (id: string, updates: Partial<Annotation>) => {\n    try {\n      const updatedAnnotations = annotations.map(annotation => \n        annotation.id === id \n          ? { ...annotation, ...updates, updatedAt: new Date().toISOString() }\n          : annotation\n      );\n      \n      updateAnnotations(updatedAnnotations);\n      console.log('Updated annotation:', id, updates);\n    } catch (err) {\n      console.error('Error updating annotation:', err);\n    }\n  };\n\n  const handleAnnotationDelete = async (id: string) => {\n    try {\n      const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n      updateAnnotations(updatedAnnotations);\n      \n      console.log('Deleted annotation:', id);\n    } catch (err) {\n      console.error('Error deleting annotation:', err);\n    }\n  };\n\n  const handleSamPointClick = (point: {x: number, y: number}, label: number = 1) => {\n    // Add point to SAM points collection\n    setSamPoints(prev => [...prev, { ...point, label }]);\n  };\n\n  const handleClearSamPoints = () => {\n    setSamPoints([]);\n    setMaskPoints([]);\n  };\n\n  const handleSamProcess = async () => {\n    if (!currentImageData || samPoints.length === 0) {\n      console.warn('No image or SAM points available');\n      return;\n    }\n\n    // Find a bounding box from existing annotations or create a default one\n    let boundingBox = {\n      topLeft: { x: 0, y: 0 },\n      bottomRight: { x: currentImageData.width, y: currentImageData.height }\n    };\n\n    // Use the first bounding box annotation if available\n    const bboxAnnotation = annotations.find(ann => ann.type === 'bounding_box');\n    if (bboxAnnotation && bboxAnnotation.coordinates.width && bboxAnnotation.coordinates.height) {\n      boundingBox = {\n        topLeft: { \n          x: bboxAnnotation.coordinates.x, \n          y: bboxAnnotation.coordinates.y \n        },\n        bottomRight: { \n          x: bboxAnnotation.coordinates.x + bboxAnnotation.coordinates.width,\n          y: bboxAnnotation.coordinates.y + bboxAnnotation.coordinates.height\n        }\n      };\n    }\n\n    setIsProcessing(true);\n    try {\n      console.log('Processing with SAM...', { \n        imageId: currentImageData.id, \n        boundingBox,\n        points: samPoints \n      });\n      \n      // Prepare SAM request with new interface\n      const samRequest: SAMRequest = {\n        imageId: currentImageData.id,\n        boundingBox,\n        points: samPoints.map(p => ({ x: p.x, y: p.y })),\n        labels: samPoints.map(p => p.label)\n      };\n\n      // Call real SAM service\n      const result = await samService.processSegmentation(samRequest);\n      \n      if (result.success) {\n        // Handle mask_points if they exist in the response\n        if (result.mask_points && result.mask_points.length > 0) {\n          console.log('Received mask points:', result.mask_points);\n          setMaskPoints(result.mask_points);\n        } else {\n          setMaskPoints([]); // Clear existing mask points if none received\n        }\n        // Show mask points details in a dialog\n        if (result.mask_points && result.mask_points.length > 0) {\n          const maskPointsCount = result.mask_points.length;\n          const dialogContent = (\n            <div>\n              <h3>Mask Points Details</h3>\n              <p>Total mask points: {maskPointsCount}</p>\n              <p>First 5 points: {result.mask_points.slice(0, 5).map((point, i) => \n                `(${point[0]}, ${point[1]})${i < 4 ? ', ' : ''}`\n              )}</p>\n              <p>Last 5 points: {result.mask_points.slice(-5).map((point, i) => \n                `(${point[0]}, ${point[1]})${i < 4 ? ', ' : ''}`\n              )}</p>\n            </div>\n          );\n\n          // Show dialog using the existing dialog system\n          setDialogContent(dialogContent);\n          setShowDialog(true);\n        }\n        // Convert SAM masks to annotations if they exist\n        if (result.masks.length > 0) {\n          result.masks.forEach((mask, index) => {\n            const samAnnotation: Annotation = {\n              id: `sam-${Date.now()}-${index}`,\n              imageId: currentImageData.id,\n              type: 'segmentation',\n              coordinates: {\n                x: Math.min(...mask.points.map(p => p.x)),\n                y: Math.min(...mask.points.map(p => p.y)),\n                points: mask.points,\n              },\n              label: `sam-nail-${annotations.length + index + 1}`,\n              confidence: mask.confidence,\n              createdAt: new Date().toISOString(),\n              updatedAt: new Date().toISOString(),\n            };\n            \n            const updatedAnnotations = [...annotations, samAnnotation];\n            updateAnnotations(updatedAnnotations);\n          });\n        }\n\n        // Clear SAM points after successful processing\n        setSamPoints([]);\n        console.log('SAM processing completed successfully');\n      } else {\n        // Clear mask points on failure\n        setMaskPoints([]);\n        console.error('SAM processing failed:', result.error);\n        alert(`SAM processing failed: ${result.error || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error processing with SAM:', err);\n      alert(`SAM processing error: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '400px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        <div>Loading image...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{ \n        padding: '2rem', \n        textAlign: 'center',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        borderRadius: '8px',\n        border: '1px solid #ef5350'\n      }}>\n        <h3>Error</h3>\n        <p>{error}</p>\n        <button \n          onClick={() => window.location.reload()}\n          style={{\n            padding: '0.5rem 1rem',\n            backgroundColor: '#1976d2',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!currentImageData) {\n    return (\n      <div style={{ \n        padding: '2rem', \n        textAlign: 'center',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        No image data available\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      display: 'flex', \n      gap: '1rem', \n      padding: '1rem',\n      height: '100vh',\n      overflow: 'hidden'\n    }}>\n      {/* Left Panel - Tools */}\n      <div style={{ \n        width: '300px', \n        flexShrink: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}>\n        <ToolPalette\n          selectedTool={selectedTool}\n          onToolSelect={handleToolSelect}\n          onSamProcess={handleSamProcess}\n          onClearSamPoints={handleClearSamPoints}\n          isProcessing={isProcessing}\n          samPointsCount={samPoints.length}\n        />\n        \n        {/* Annotations List */}\n        <div style={{\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          padding: '1rem',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          flex: 1,\n          minHeight: 0,\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <h3 style={{ \n            margin: '0 0 1rem 0', \n            fontSize: '1.1rem', \n            color: '#333' \n          }}>\n            Annotations ({annotations.length})\n          </h3>\n          \n          {annotations.length === 0 ? (\n            <p style={{ \n              color: '#666', \n              fontSize: '0.9rem',\n              margin: 0 \n            }}>\n              No annotations yet. Use the tools above to create some.\n            </p>\n          ) : (\n            <div style={{ \n              flex: 1,\n              overflowY: 'auto',\n              minHeight: 0\n            }}>\n              {annotations.map((annotation, index) => (\n                <div \n                  key={annotation.id}\n                  style={{\n                    padding: '0.5rem',\n                    marginBottom: '0.5rem',\n                    backgroundColor: '#fff',\n                    borderRadius: '4px',\n                    border: '1px solid #ddd',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  <div style={{ fontWeight: 'bold', marginBottom: '0.25rem' }}>\n                    {annotation.type === 'bounding_box' ? '📦' : '🎯'} {annotation.label}\n                  </div>\n                  <div style={{ color: '#666', fontSize: '0.8rem' }}>\n                    {annotation.type === 'bounding_box' \n                      ? `${Math.round(annotation.coordinates.x)}, ${Math.round(annotation.coordinates.y)} - ${Math.round(annotation.coordinates.width || 0)}×${Math.round(annotation.coordinates.height || 0)}`\n                      : `${annotation.coordinates.points?.length || 0} points`\n                    }\n                    {annotation.confidence && (\n                      <span> (conf: {Math.round(annotation.confidence * 100)}%)</span>\n                    )}\n                  </div>\n                  <button\n                    onClick={() => handleAnnotationDelete(annotation.id)}\n                    style={{\n                      marginTop: '0.25rem',\n                      padding: '0.25rem 0.5rem',\n                      backgroundColor: '#ff4444',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '3px',\n                      fontSize: '0.8rem',\n                      cursor: 'pointer'\n                    }}\n                  >\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Right Panel - Canvas */}\n      <div style={{ \n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        minWidth: 0\n      }}>\n        <div style={{ \n          marginBottom: '1rem',\n          padding: '0.75rem 1rem',\n          backgroundColor: '#e3f2fd',\n          borderRadius: '6px',\n          border: '1px solid #1976d2',\n          flexShrink: 0\n        }}>\n          <h2 style={{ margin: '0 0 0.5rem 0', color: '#1976d2' }}>\n            {currentImageData.filename}\n          </h2>\n          <p style={{ margin: 0, fontSize: '0.9rem', color: '#1565c0' }}>\n            Current tool: <strong>{selectedTool.replace('_', ' ').toUpperCase()}</strong> | Image: {currentImageData.width}×{currentImageData.height}px\n          </p>\n        </div>\n\n        <div style={{\n          flex: 1,\n          overflow: 'auto',\n          minHeight: 0,\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        }}>\n          <ImageCanvas\n            imageUrl={currentImageData.url}\n            annotations={annotations}\n            selectedTool={selectedTool}\n            onAnnotationCreate={handleAnnotationCreate}\n            onAnnotationUpdate={handleAnnotationUpdate}\n            onAnnotationDelete={handleAnnotationDelete}\n            onSamPointClick={handleSamPointClick}\n            samPoints={samPoints}\n            maskPoints={maskPoints}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LabelingInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}