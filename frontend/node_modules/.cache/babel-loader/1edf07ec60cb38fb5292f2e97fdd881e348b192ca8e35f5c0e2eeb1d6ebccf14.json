{"ast":null,"code":"var _jsxFileName = \"/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/LabelingInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport ToolPalette from './ToolPalette';\nimport { useImageNavigation } from '../contexts/ImageNavigationContext';\nimport { samService } from '../services/samService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelingInterface = () => {\n  _s();\n  const [selectedTool, setSelectedTool] = useState('select');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [samPoints, setSamPoints] = useState([]);\n  const {\n    currentImageData,\n    annotations,\n    updateAnnotations,\n    saveCurrentAnnotations,\n    isLoading,\n    error\n  } = useImageNavigation();\n\n  // Auto-save annotations when they change\n  useEffect(() => {\n    const autoSaveTimer = setTimeout(() => {\n      if (annotations.length > 0) {\n        saveCurrentAnnotations(annotations);\n      }\n    }, 2000); // Auto-save after 2 seconds of inactivity\n\n    return () => clearTimeout(autoSaveTimer);\n  }, [annotations, saveCurrentAnnotations]);\n  const handleToolSelect = tool => {\n    setSelectedTool(tool);\n  };\n  const handleAnnotationCreate = async annotationData => {\n    if (!currentImageData) return;\n    try {\n      // Generate temporary ID for now - will be replaced with API response\n      const newAnnotation = {\n        ...annotationData,\n        id: `temp-${Date.now()}`,\n        imageId: currentImageData.id,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      const updatedAnnotations = [...annotations, newAnnotation];\n      updateAnnotations(updatedAnnotations);\n      console.log('Created annotation:', newAnnotation);\n    } catch (err) {\n      console.error('Error creating annotation:', err);\n    }\n  };\n  const handleAnnotationUpdate = async (id, updates) => {\n    try {\n      const updatedAnnotations = annotations.map(annotation => annotation.id === id ? {\n        ...annotation,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      } : annotation);\n      updateAnnotations(updatedAnnotations);\n      console.log('Updated annotation:', id, updates);\n    } catch (err) {\n      console.error('Error updating annotation:', err);\n    }\n  };\n  const handleAnnotationDelete = async id => {\n    try {\n      const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n      updateAnnotations(updatedAnnotations);\n      console.log('Deleted annotation:', id);\n    } catch (err) {\n      console.error('Error deleting annotation:', err);\n    }\n  };\n  const handleSamPointClick = (point, label = 1) => {\n    // Add point to SAM points collection\n    setSamPoints(prev => [...prev, {\n      ...point,\n      label\n    }]);\n  };\n  const handleClearSamPoints = () => {\n    setSamPoints([]);\n  };\n  const handleSamProcess = async () => {\n    if (!currentImageData || samPoints.length === 0) {\n      console.warn('No image or SAM points available');\n      return;\n    }\n    setIsProcessing(true);\n    try {\n      console.log('Processing with SAM...', {\n        imageId: currentImageData.id,\n        points: samPoints\n      });\n\n      // Prepare SAM request\n      const samRequest = {\n        imageId: currentImageData.id,\n        points: samPoints.map(p => ({\n          x: p.x,\n          y: p.y\n        })),\n        labels: samPoints.map(p => p.label)\n      };\n\n      // Call real SAM service\n      const result = await samService.processSegmentation(samRequest);\n      if (result.success && result.masks.length > 0) {\n        // Convert SAM masks to annotations\n        result.masks.forEach((mask, index) => {\n          const samAnnotation = {\n            id: `sam-${Date.now()}-${index}`,\n            imageId: currentImageData.id,\n            type: 'segmentation',\n            coordinates: {\n              x: Math.min(...mask.points.map(p => p.x)),\n              y: Math.min(...mask.points.map(p => p.y)),\n              points: mask.points\n            },\n            label: `sam-nail-${annotations.length + index + 1}`,\n            confidence: mask.confidence,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString()\n          };\n          const updatedAnnotations = [...annotations, samAnnotation];\n          updateAnnotations(updatedAnnotations);\n        });\n\n        // Clear SAM points after successful processing\n        setSamPoints([]);\n        console.log('SAM processing completed successfully');\n      } else {\n        console.error('SAM processing failed:', result.error);\n        alert(`SAM processing failed: ${result.error || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error processing with SAM:', err);\n      alert(`SAM processing error: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '400px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        borderRadius: '8px',\n        border: '1px solid #ef5350'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          padding: '0.5rem 1rem',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentImageData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: \"No image data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      padding: '1rem',\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        flexShrink: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToolPalette, {\n        selectedTool: selectedTool,\n        onToolSelect: handleToolSelect,\n        onSamProcess: handleSamProcess,\n        onClearSamPoints: handleClearSamPoints,\n        isProcessing: isProcessing,\n        samPointsCount: samPoints.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          padding: '1rem',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          flex: 1,\n          minHeight: 0,\n          display: 'flex',\n          flexDirection: 'column'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 1rem 0',\n            fontSize: '1.1rem',\n            color: '#333'\n          },\n          children: [\"Annotations (\", annotations.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, this), annotations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            fontSize: '0.9rem',\n            margin: 0\n          },\n          children: \"No annotations yet. Use the tools above to create some.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            overflowY: 'auto',\n            minHeight: 0\n          },\n          children: annotations.map((annotation, index) => {\n            var _annotation$coordinat;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '0.5rem',\n                marginBottom: '0.5rem',\n                backgroundColor: '#fff',\n                borderRadius: '4px',\n                border: '1px solid #ddd',\n                fontSize: '0.9rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '0.25rem'\n                },\n                children: [annotation.type === 'bounding_box' ? '📦' : '🎯', \" \", annotation.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#666',\n                  fontSize: '0.8rem'\n                },\n                children: [annotation.type === 'bounding_box' ? `${Math.round(annotation.coordinates.x)}, ${Math.round(annotation.coordinates.y)} - ${Math.round(annotation.coordinates.width || 0)}×${Math.round(annotation.coordinates.height || 0)}` : `${((_annotation$coordinat = annotation.coordinates.points) === null || _annotation$coordinat === void 0 ? void 0 : _annotation$coordinat.length) || 0} points`, annotation.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" (conf: \", Math.round(annotation.confidence * 100), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 287,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAnnotationDelete(annotation.id),\n                style: {\n                  marginTop: '0.25rem',\n                  padding: '0.25rem 0.5rem',\n                  backgroundColor: '#ff4444',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '3px',\n                  fontSize: '0.8rem',\n                  cursor: 'pointer'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 19\n              }, this)]\n            }, annotation.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        minWidth: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem',\n          padding: '0.75rem 1rem',\n          backgroundColor: '#e3f2fd',\n          borderRadius: '6px',\n          border: '1px solid #1976d2',\n          flexShrink: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: '#1976d2'\n          },\n          children: currentImageData.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            color: '#1565c0'\n          },\n          children: [\"Current tool: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedTool.replace('_', ' ').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 27\n          }, this), \" | Image: \", currentImageData.width, \"\\xD7\", currentImageData.height, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1,\n          overflow: 'auto',\n          minHeight: 0,\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        },\n        children: /*#__PURE__*/_jsxDEV(ImageCanvas, {\n          imageUrl: currentImageData.url,\n          annotations: annotations,\n          selectedTool: selectedTool,\n          onAnnotationCreate: handleAnnotationCreate,\n          onAnnotationUpdate: handleAnnotationUpdate,\n          onAnnotationDelete: handleAnnotationDelete,\n          onSamPointClick: handleSamPointClick,\n          samPoints: samPoints\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n};\n_s(LabelingInterface, \"kIy6MuHhBktk0gvslxSyQtOWKNg=\", false, function () {\n  return [useImageNavigation];\n});\n_c = LabelingInterface;\nexport default LabelingInterface;\nvar _c;\n$RefreshReg$(_c, \"LabelingInterface\");","map":{"version":3,"names":["React","useState","useEffect","ImageCanvas","ToolPalette","useImageNavigation","samService","jsxDEV","_jsxDEV","LabelingInterface","_s","selectedTool","setSelectedTool","isProcessing","setIsProcessing","samPoints","setSamPoints","currentImageData","annotations","updateAnnotations","saveCurrentAnnotations","isLoading","error","autoSaveTimer","setTimeout","length","clearTimeout","handleToolSelect","tool","handleAnnotationCreate","annotationData","newAnnotation","id","Date","now","imageId","createdAt","toISOString","updatedAt","updatedAnnotations","console","log","err","handleAnnotationUpdate","updates","map","annotation","handleAnnotationDelete","filter","handleSamPointClick","point","label","prev","handleClearSamPoints","handleSamProcess","warn","points","samRequest","p","x","y","labels","result","processSegmentation","success","masks","forEach","mask","index","samAnnotation","type","coordinates","Math","min","confidence","alert","Error","message","style","display","justifyContent","alignItems","height","backgroundColor","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","textAlign","color","border","onClick","window","location","reload","cursor","gap","overflow","width","flexShrink","flexDirection","onToolSelect","onSamProcess","onClearSamPoints","samPointsCount","boxShadow","flex","minHeight","margin","fontSize","overflowY","_annotation$coordinat","marginBottom","fontWeight","round","marginTop","minWidth","filename","replace","toUpperCase","imageUrl","url","onAnnotationCreate","onAnnotationUpdate","onAnnotationDelete","onSamPointClick","_c","$RefreshReg$"],"sources":["/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/LabelingInterface.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport ToolPalette from './ToolPalette';\nimport { useImageNavigation } from '../contexts/ImageNavigationContext';\nimport { Annotation, SAMRequest } from '../types/annotations';\nimport { samService } from '../services/samService';\n\nconst LabelingInterface: React.FC = () => {\n  const [selectedTool, setSelectedTool] = useState<'select' | 'bounding_box' | 'sam_point'>('select');\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [samPoints, setSamPoints] = useState<Array<{x: number, y: number, label: number}>>([]);\n  \n  const {\n    currentImageData,\n    annotations,\n    updateAnnotations,\n    saveCurrentAnnotations,\n    isLoading,\n    error\n  } = useImageNavigation();\n\n  // Auto-save annotations when they change\n  useEffect(() => {\n    const autoSaveTimer = setTimeout(() => {\n      if (annotations.length > 0) {\n        saveCurrentAnnotations(annotations);\n      }\n    }, 2000); // Auto-save after 2 seconds of inactivity\n\n    return () => clearTimeout(autoSaveTimer);\n  }, [annotations, saveCurrentAnnotations]);\n\n  const handleToolSelect = (tool: string) => {\n    setSelectedTool(tool as 'select' | 'bounding_box' | 'sam_point');\n  };\n\n  const handleAnnotationCreate = async (annotationData: Omit<Annotation, 'id' | 'createdAt' | 'updatedAt'>) => {\n    if (!currentImageData) return;\n    \n    try {\n      // Generate temporary ID for now - will be replaced with API response\n      const newAnnotation: Annotation = {\n        ...annotationData,\n        id: `temp-${Date.now()}`,\n        imageId: currentImageData.id,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      const updatedAnnotations = [...annotations, newAnnotation];\n      updateAnnotations(updatedAnnotations);\n      \n      console.log('Created annotation:', newAnnotation);\n    } catch (err) {\n      console.error('Error creating annotation:', err);\n    }\n  };\n\n  const handleAnnotationUpdate = async (id: string, updates: Partial<Annotation>) => {\n    try {\n      const updatedAnnotations = annotations.map(annotation => \n        annotation.id === id \n          ? { ...annotation, ...updates, updatedAt: new Date().toISOString() }\n          : annotation\n      );\n      \n      updateAnnotations(updatedAnnotations);\n      console.log('Updated annotation:', id, updates);\n    } catch (err) {\n      console.error('Error updating annotation:', err);\n    }\n  };\n\n  const handleAnnotationDelete = async (id: string) => {\n    try {\n      const updatedAnnotations = annotations.filter(annotation => annotation.id !== id);\n      updateAnnotations(updatedAnnotations);\n      \n      console.log('Deleted annotation:', id);\n    } catch (err) {\n      console.error('Error deleting annotation:', err);\n    }\n  };\n\n  const handleSamPointClick = (point: {x: number, y: number}, label: number = 1) => {\n    // Add point to SAM points collection\n    setSamPoints(prev => [...prev, { ...point, label }]);\n  };\n\n  const handleClearSamPoints = () => {\n    setSamPoints([]);\n  };\n\n  const handleSamProcess = async () => {\n    if (!currentImageData || samPoints.length === 0) {\n      console.warn('No image or SAM points available');\n      return;\n    }\n\n    setIsProcessing(true);\n    try {\n      console.log('Processing with SAM...', { imageId: currentImageData.id, points: samPoints });\n      \n      // Prepare SAM request\n      const samRequest: SAMRequest = {\n        imageId: currentImageData.id,\n        points: samPoints.map(p => ({ x: p.x, y: p.y })),\n        labels: samPoints.map(p => p.label)\n      };\n\n      // Call real SAM service\n      const result = await samService.processSegmentation(samRequest);\n      \n      if (result.success && result.masks.length > 0) {\n        // Convert SAM masks to annotations\n        result.masks.forEach((mask, index) => {\n          const samAnnotation: Annotation = {\n            id: `sam-${Date.now()}-${index}`,\n            imageId: currentImageData.id,\n            type: 'segmentation',\n            coordinates: {\n              x: Math.min(...mask.points.map(p => p.x)),\n              y: Math.min(...mask.points.map(p => p.y)),\n              points: mask.points,\n            },\n            label: `sam-nail-${annotations.length + index + 1}`,\n            confidence: mask.confidence,\n            createdAt: new Date().toISOString(),\n            updatedAt: new Date().toISOString(),\n          };\n          \n          const updatedAnnotations = [...annotations, samAnnotation];\n          updateAnnotations(updatedAnnotations);\n        });\n\n        // Clear SAM points after successful processing\n        setSamPoints([]);\n        console.log('SAM processing completed successfully');\n      } else {\n        console.error('SAM processing failed:', result.error);\n        alert(`SAM processing failed: ${result.error || 'Unknown error'}`);\n      }\n    } catch (err) {\n      console.error('Error processing with SAM:', err);\n      alert(`SAM processing error: ${err instanceof Error ? err.message : 'Unknown error'}`);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '400px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        <div>Loading image...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{ \n        padding: '2rem', \n        textAlign: 'center',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        borderRadius: '8px',\n        border: '1px solid #ef5350'\n      }}>\n        <h3>Error</h3>\n        <p>{error}</p>\n        <button \n          onClick={() => window.location.reload()}\n          style={{\n            padding: '0.5rem 1rem',\n            backgroundColor: '#1976d2',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!currentImageData) {\n    return (\n      <div style={{ \n        padding: '2rem', \n        textAlign: 'center',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        No image data available\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      display: 'flex', \n      gap: '1rem', \n      padding: '1rem',\n      height: '100vh',\n      overflow: 'hidden'\n    }}>\n      {/* Left Panel - Tools */}\n      <div style={{ \n        width: '300px', \n        flexShrink: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%'\n      }}>\n        <ToolPalette\n          selectedTool={selectedTool}\n          onToolSelect={handleToolSelect}\n          onSamProcess={handleSamProcess}\n          onClearSamPoints={handleClearSamPoints}\n          isProcessing={isProcessing}\n          samPointsCount={samPoints.length}\n        />\n        \n        {/* Annotations List */}\n        <div style={{\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          padding: '1rem',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          flex: 1,\n          minHeight: 0,\n          display: 'flex',\n          flexDirection: 'column'\n        }}>\n          <h3 style={{ \n            margin: '0 0 1rem 0', \n            fontSize: '1.1rem', \n            color: '#333' \n          }}>\n            Annotations ({annotations.length})\n          </h3>\n          \n          {annotations.length === 0 ? (\n            <p style={{ \n              color: '#666', \n              fontSize: '0.9rem',\n              margin: 0 \n            }}>\n              No annotations yet. Use the tools above to create some.\n            </p>\n          ) : (\n            <div style={{ \n              flex: 1,\n              overflowY: 'auto',\n              minHeight: 0\n            }}>\n              {annotations.map((annotation, index) => (\n                <div \n                  key={annotation.id}\n                  style={{\n                    padding: '0.5rem',\n                    marginBottom: '0.5rem',\n                    backgroundColor: '#fff',\n                    borderRadius: '4px',\n                    border: '1px solid #ddd',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  <div style={{ fontWeight: 'bold', marginBottom: '0.25rem' }}>\n                    {annotation.type === 'bounding_box' ? '📦' : '🎯'} {annotation.label}\n                  </div>\n                  <div style={{ color: '#666', fontSize: '0.8rem' }}>\n                    {annotation.type === 'bounding_box' \n                      ? `${Math.round(annotation.coordinates.x)}, ${Math.round(annotation.coordinates.y)} - ${Math.round(annotation.coordinates.width || 0)}×${Math.round(annotation.coordinates.height || 0)}`\n                      : `${annotation.coordinates.points?.length || 0} points`\n                    }\n                    {annotation.confidence && (\n                      <span> (conf: {Math.round(annotation.confidence * 100)}%)</span>\n                    )}\n                  </div>\n                  <button\n                    onClick={() => handleAnnotationDelete(annotation.id)}\n                    style={{\n                      marginTop: '0.25rem',\n                      padding: '0.25rem 0.5rem',\n                      backgroundColor: '#ff4444',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '3px',\n                      fontSize: '0.8rem',\n                      cursor: 'pointer'\n                    }}\n                  >\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Right Panel - Canvas */}\n      <div style={{ \n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        minWidth: 0\n      }}>\n        <div style={{ \n          marginBottom: '1rem',\n          padding: '0.75rem 1rem',\n          backgroundColor: '#e3f2fd',\n          borderRadius: '6px',\n          border: '1px solid #1976d2',\n          flexShrink: 0\n        }}>\n          <h2 style={{ margin: '0 0 0.5rem 0', color: '#1976d2' }}>\n            {currentImageData.filename}\n          </h2>\n          <p style={{ margin: 0, fontSize: '0.9rem', color: '#1565c0' }}>\n            Current tool: <strong>{selectedTool.replace('_', ' ').toUpperCase()}</strong> | Image: {currentImageData.width}×{currentImageData.height}px\n          </p>\n        </div>\n\n        <div style={{\n          flex: 1,\n          overflow: 'auto',\n          minHeight: 0,\n          border: '1px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#f9f9f9'\n        }}>\n          <ImageCanvas\n            imageUrl={currentImageData.url}\n            annotations={annotations}\n            selectedTool={selectedTool}\n            onAnnotationCreate={handleAnnotationCreate}\n            onAnnotationUpdate={handleAnnotationUpdate}\n            onAnnotationDelete={handleAnnotationDelete}\n            onSamPointClick={handleSamPointClick}\n            samPoints={samPoints}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LabelingInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}