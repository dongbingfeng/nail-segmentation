{"ast":null,"code":"var _jsxFileName = \"/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/ImageCanvas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageCanvas = ({\n  imageUrl,\n  annotations,\n  selectedTool,\n  onAnnotationCreate,\n  onAnnotationUpdate,\n  onAnnotationDelete\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const imageRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPoint, setStartPoint] = useState(null);\n  const [currentRect, setCurrentRect] = useState(null);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [scale, setScale] = useState(1);\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Load and setup image\n  useEffect(() => {\n    if (!imageUrl || !canvasRef.current) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    const img = new Image();\n    img.onload = () => {\n      imageRef.current = img;\n\n      // Calculate scale to fit image in canvas\n      const canvasWidth = canvas.width;\n      const canvasHeight = canvas.height;\n      const imgAspect = img.width / img.height;\n      const canvasAspect = canvasWidth / canvasHeight;\n      let newScale, newOffsetX, newOffsetY;\n      if (imgAspect > canvasAspect) {\n        // Image is wider than canvas\n        newScale = canvasWidth / img.width;\n        newOffsetX = 0;\n        newOffsetY = (canvasHeight - img.height * newScale) / 2;\n      } else {\n        // Image is taller than canvas\n        newScale = canvasHeight / img.height;\n        newOffsetX = (canvasWidth - img.width * newScale) / 2;\n        newOffsetY = 0;\n      }\n      setScale(newScale);\n      setOffset({\n        x: newOffsetX,\n        y: newOffsetY\n      });\n      setImageLoaded(true);\n      drawCanvas();\n    };\n    img.src = imageUrl;\n  }, [imageUrl]);\n\n  // Redraw canvas when annotations change\n  useEffect(() => {\n    if (imageLoaded) {\n      drawCanvas();\n    }\n  }, [annotations, imageLoaded, currentRect]);\n  const drawCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas === null || canvas === void 0 ? void 0 : canvas.getContext('2d');\n    const img = imageRef.current;\n    if (!canvas || !ctx || !img) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw image\n    ctx.drawImage(img, offset.x, offset.y, img.width * scale, img.height * scale);\n\n    // Draw existing annotations\n    annotations.forEach(annotation => {\n      if (annotation.type === 'bounding_box') {\n        const {\n          x,\n          y,\n          width = 0,\n          height = 0\n        } = annotation.coordinates;\n\n        // Convert image coordinates to canvas coordinates\n        const canvasX = offset.x + x * scale;\n        const canvasY = offset.y + y * scale;\n        const canvasWidth = width * scale;\n        const canvasHeight = height * scale;\n\n        // Draw bounding box\n        ctx.strokeStyle = '#ff0000';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(canvasX, canvasY, canvasWidth, canvasHeight);\n\n        // Draw label\n        ctx.fillStyle = '#ff0000';\n        ctx.font = '12px Arial';\n        ctx.fillText(annotation.label, canvasX, canvasY - 5);\n      }\n    });\n\n    // Draw current drawing rectangle\n    if (currentRect) {\n      const {\n        x,\n        y,\n        width,\n        height\n      } = currentRect;\n      ctx.strokeStyle = '#00ff00';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([5, 5]);\n      ctx.strokeRect(x, y, width, height);\n      ctx.setLineDash([]);\n    }\n  }, [annotations, currentRect, scale, offset]);\n  const getMousePos = e => {\n    const canvas = canvasRef.current;\n    if (!canvas) return {\n      x: 0,\n      y: 0\n    };\n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n  const canvasToImageCoords = (canvasX, canvasY) => {\n    return {\n      x: (canvasX - offset.x) / scale,\n      y: (canvasY - offset.y) / scale\n    };\n  };\n  const handleMouseDown = e => {\n    if (selectedTool !== 'bounding_box') return;\n    const mousePos = getMousePos(e);\n    setIsDrawing(true);\n    setStartPoint(mousePos);\n    setCurrentRect(null);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing || !startPoint || selectedTool !== 'bounding_box') return;\n    const mousePos = getMousePos(e);\n    const width = mousePos.x - startPoint.x;\n    const height = mousePos.y - startPoint.y;\n    setCurrentRect({\n      x: width >= 0 ? startPoint.x : mousePos.x,\n      y: height >= 0 ? startPoint.y : mousePos.y,\n      width: Math.abs(width),\n      height: Math.abs(height)\n    });\n  };\n  const handleMouseUp = e => {\n    if (!isDrawing || !startPoint || !currentRect || selectedTool !== 'bounding_box') return;\n\n    // Minimum rectangle size\n    if (currentRect.width < 10 || currentRect.height < 10) {\n      setIsDrawing(false);\n      setStartPoint(null);\n      setCurrentRect(null);\n      return;\n    }\n\n    // Convert canvas coordinates to image coordinates\n    const imageStart = canvasToImageCoords(currentRect.x, currentRect.y);\n    const imageEnd = canvasToImageCoords(currentRect.x + currentRect.width, currentRect.y + currentRect.height);\n\n    // Create annotation\n    const annotation = {\n      imageId: 'current-image',\n      type: 'bounding_box',\n      coordinates: {\n        x: Math.min(imageStart.x, imageEnd.x),\n        y: Math.min(imageStart.y, imageEnd.y),\n        width: Math.abs(imageEnd.x - imageStart.x),\n        height: Math.abs(imageEnd.y - imageStart.y)\n      },\n      label: `bbox-${annotations.length + 1}`\n    };\n    onAnnotationCreate(annotation);\n\n    // Reset drawing state\n    setIsDrawing(false);\n    setStartPoint(null);\n    setCurrentRect(null);\n  };\n  const handleAnnotationClick = e => {\n    if (selectedTool !== 'select') return;\n    const mousePos = getMousePos(e);\n    const imagePos = canvasToImageCoords(mousePos.x, mousePos.y);\n\n    // Find clicked annotation\n    const clickedAnnotation = annotations.find(annotation => {\n      if (annotation.type === 'bounding_box') {\n        const {\n          x,\n          y,\n          width = 0,\n          height = 0\n        } = annotation.coordinates;\n        return imagePos.x >= x && imagePos.x <= x + width && imagePos.y >= y && imagePos.y <= y + height;\n      }\n      return false;\n    });\n    if (clickedAnnotation) {\n      // For now, just log the clicked annotation\n      console.log('Clicked annotation:', clickedAnnotation);\n    }\n  };\n  const handleCanvasClick = e => {\n    if (selectedTool === 'select') {\n      handleAnnotationClick(e);\n    } else if (selectedTool === 'sam_point') {\n      const mousePos = getMousePos(e);\n      const imagePos = canvasToImageCoords(mousePos.x, mousePos.y);\n      console.log('SAM point clicked at:', imagePos);\n      // TODO: Implement SAM point functionality\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      border: '1px solid #ccc',\n      borderRadius: '4px',\n      overflow: 'hidden',\n      backgroundColor: '#f0f0f0',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.5rem',\n      padding: '1rem',\n      flex: 1,\n      minHeight: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        color: '#666',\n        flexShrink: 0\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 1rem 0'\n        },\n        children: \"Interactive Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 0 1rem 0'\n        },\n        children: [\"Selected Tool: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: selectedTool.replace('_', ' ').toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), selectedTool === 'bounding_box' && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0 0 1rem 0',\n          fontSize: '0.9rem',\n          color: '#555'\n        },\n        children: \"Click and drag to draw a bounding box\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: 0,\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: 800,\n        height: 600,\n        style: {\n          border: '2px solid #ddd',\n          borderRadius: '8px',\n          backgroundColor: '#fff',\n          cursor: selectedTool === 'bounding_box' ? 'crosshair' : selectedTool === 'sam_point' ? 'pointer' : 'default',\n          maxWidth: '100%',\n          maxHeight: '100%',\n          objectFit: 'contain'\n        },\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onClick: handleCanvasClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        textAlign: 'center',\n        flexShrink: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0',\n          fontSize: '0.9rem',\n          color: '#666'\n        },\n        children: [\"Annotations: \", annotations.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageCanvas, \"LXpFx53IoMQjW134yYKBdB7GQj0=\");\n_c = ImageCanvas;\nexport default ImageCanvas;\nvar _c;\n$RefreshReg$(_c, \"ImageCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","useState","useCallback","jsxDEV","_jsxDEV","ImageCanvas","imageUrl","annotations","selectedTool","onAnnotationCreate","onAnnotationUpdate","onAnnotationDelete","_s","canvasRef","imageRef","isDrawing","setIsDrawing","startPoint","setStartPoint","currentRect","setCurrentRect","imageLoaded","setImageLoaded","scale","setScale","offset","setOffset","x","y","current","canvas","ctx","getContext","img","Image","onload","canvasWidth","width","canvasHeight","height","imgAspect","canvasAspect","newScale","newOffsetX","newOffsetY","drawCanvas","src","clearRect","drawImage","forEach","annotation","type","coordinates","canvasX","canvasY","strokeStyle","lineWidth","strokeRect","fillStyle","font","fillText","label","setLineDash","getMousePos","e","rect","getBoundingClientRect","clientX","left","clientY","top","canvasToImageCoords","handleMouseDown","mousePos","handleMouseMove","Math","abs","handleMouseUp","imageStart","imageEnd","imageId","min","length","handleAnnotationClick","imagePos","clickedAnnotation","find","console","log","handleCanvasClick","style","border","borderRadius","overflow","backgroundColor","display","flexDirection","gap","padding","flex","minHeight","children","textAlign","color","flexShrink","margin","fileName","_jsxFileName","lineNumber","columnNumber","replace","toUpperCase","fontSize","justifyContent","alignItems","ref","cursor","maxWidth","maxHeight","objectFit","onMouseDown","onMouseMove","onMouseUp","onClick","_c","$RefreshReg$"],"sources":["/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/ImageCanvas.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState, useCallback } from 'react';\n\ninterface Annotation {\n  id: string;\n  imageId: string;\n  type: 'bounding_box' | 'segmentation';\n  coordinates: {\n    x: number;\n    y: number;\n    width?: number;\n    height?: number;\n    points?: Array<{x: number, y: number}>;\n  };\n  label: string;\n  confidence?: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface ImageCanvasProps {\n  imageUrl: string;\n  annotations: Annotation[];\n  selectedTool: 'select' | 'bounding_box' | 'sam_point';\n  onAnnotationCreate: (annotation: Omit<Annotation, 'id' | 'createdAt' | 'updatedAt'>) => void;\n  onAnnotationUpdate: (id: string, annotation: Partial<Annotation>) => void;\n  onAnnotationDelete: (id: string) => void;\n}\n\nconst ImageCanvas: React.FC<ImageCanvasProps> = ({\n  imageUrl,\n  annotations,\n  selectedTool,\n  onAnnotationCreate,\n  onAnnotationUpdate,\n  onAnnotationDelete\n}) => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const imageRef = useRef<HTMLImageElement>(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [startPoint, setStartPoint] = useState<{x: number, y: number} | null>(null);\n  const [currentRect, setCurrentRect] = useState<{x: number, y: number, width: number, height: number} | null>(null);\n  const [imageLoaded, setImageLoaded] = useState(false);\n  const [scale, setScale] = useState(1);\n  const [offset, setOffset] = useState({x: 0, y: 0});\n\n  // Load and setup image\n  useEffect(() => {\n    if (!imageUrl || !canvasRef.current) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const img = new Image();\n    img.onload = () => {\n      imageRef.current = img;\n      \n      // Calculate scale to fit image in canvas\n      const canvasWidth = canvas.width;\n      const canvasHeight = canvas.height;\n      const imgAspect = img.width / img.height;\n      const canvasAspect = canvasWidth / canvasHeight;\n      \n      let newScale, newOffsetX, newOffsetY;\n      \n      if (imgAspect > canvasAspect) {\n        // Image is wider than canvas\n        newScale = canvasWidth / img.width;\n        newOffsetX = 0;\n        newOffsetY = (canvasHeight - img.height * newScale) / 2;\n      } else {\n        // Image is taller than canvas\n        newScale = canvasHeight / img.height;\n        newOffsetX = (canvasWidth - img.width * newScale) / 2;\n        newOffsetY = 0;\n      }\n      \n      setScale(newScale);\n      setOffset({ x: newOffsetX, y: newOffsetY });\n      setImageLoaded(true);\n      \n      drawCanvas();\n    };\n    \n    img.src = imageUrl;\n  }, [imageUrl]);\n\n  // Redraw canvas when annotations change\n  useEffect(() => {\n    if (imageLoaded) {\n      drawCanvas();\n    }\n  }, [annotations, imageLoaded, currentRect]);\n\n  const drawCanvas = useCallback(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas?.getContext('2d');\n    const img = imageRef.current;\n    \n    if (!canvas || !ctx || !img) return;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    \n    // Draw image\n    ctx.drawImage(img, offset.x, offset.y, img.width * scale, img.height * scale);\n    \n    // Draw existing annotations\n    annotations.forEach((annotation) => {\n      if (annotation.type === 'bounding_box') {\n        const { x, y, width = 0, height = 0 } = annotation.coordinates;\n        \n        // Convert image coordinates to canvas coordinates\n        const canvasX = offset.x + x * scale;\n        const canvasY = offset.y + y * scale;\n        const canvasWidth = width * scale;\n        const canvasHeight = height * scale;\n        \n        // Draw bounding box\n        ctx.strokeStyle = '#ff0000';\n        ctx.lineWidth = 2;\n        ctx.strokeRect(canvasX, canvasY, canvasWidth, canvasHeight);\n        \n        // Draw label\n        ctx.fillStyle = '#ff0000';\n        ctx.font = '12px Arial';\n        ctx.fillText(annotation.label, canvasX, canvasY - 5);\n      }\n    });\n    \n    // Draw current drawing rectangle\n    if (currentRect) {\n      const { x, y, width, height } = currentRect;\n      ctx.strokeStyle = '#00ff00';\n      ctx.lineWidth = 2;\n      ctx.setLineDash([5, 5]);\n      ctx.strokeRect(x, y, width, height);\n      ctx.setLineDash([]);\n    }\n  }, [annotations, currentRect, scale, offset]);\n\n  const getMousePos = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return { x: 0, y: 0 };\n    \n    const rect = canvas.getBoundingClientRect();\n    return {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n  };\n\n  const canvasToImageCoords = (canvasX: number, canvasY: number) => {\n    return {\n      x: (canvasX - offset.x) / scale,\n      y: (canvasY - offset.y) / scale\n    };\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (selectedTool !== 'bounding_box') return;\n    \n    const mousePos = getMousePos(e);\n    setIsDrawing(true);\n    setStartPoint(mousePos);\n    setCurrentRect(null);\n  };\n\n  const handleMouseMove = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!isDrawing || !startPoint || selectedTool !== 'bounding_box') return;\n    \n    const mousePos = getMousePos(e);\n    const width = mousePos.x - startPoint.x;\n    const height = mousePos.y - startPoint.y;\n    \n    setCurrentRect({\n      x: width >= 0 ? startPoint.x : mousePos.x,\n      y: height >= 0 ? startPoint.y : mousePos.y,\n      width: Math.abs(width),\n      height: Math.abs(height)\n    });\n  };\n\n  const handleMouseUp = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (!isDrawing || !startPoint || !currentRect || selectedTool !== 'bounding_box') return;\n    \n    // Minimum rectangle size\n    if (currentRect.width < 10 || currentRect.height < 10) {\n      setIsDrawing(false);\n      setStartPoint(null);\n      setCurrentRect(null);\n      return;\n    }\n    \n    // Convert canvas coordinates to image coordinates\n    const imageStart = canvasToImageCoords(currentRect.x, currentRect.y);\n    const imageEnd = canvasToImageCoords(currentRect.x + currentRect.width, currentRect.y + currentRect.height);\n    \n    // Create annotation\n    const annotation = {\n      imageId: 'current-image',\n      type: 'bounding_box' as const,\n      coordinates: {\n        x: Math.min(imageStart.x, imageEnd.x),\n        y: Math.min(imageStart.y, imageEnd.y),\n        width: Math.abs(imageEnd.x - imageStart.x),\n        height: Math.abs(imageEnd.y - imageStart.y)\n      },\n      label: `bbox-${annotations.length + 1}`\n    };\n    \n    onAnnotationCreate(annotation);\n    \n    // Reset drawing state\n    setIsDrawing(false);\n    setStartPoint(null);\n    setCurrentRect(null);\n  };\n\n  const handleAnnotationClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (selectedTool !== 'select') return;\n    \n    const mousePos = getMousePos(e);\n    const imagePos = canvasToImageCoords(mousePos.x, mousePos.y);\n    \n    // Find clicked annotation\n    const clickedAnnotation = annotations.find(annotation => {\n      if (annotation.type === 'bounding_box') {\n        const { x, y, width = 0, height = 0 } = annotation.coordinates;\n        return imagePos.x >= x && imagePos.x <= x + width &&\n               imagePos.y >= y && imagePos.y <= y + height;\n      }\n      return false;\n    });\n    \n    if (clickedAnnotation) {\n      // For now, just log the clicked annotation\n      console.log('Clicked annotation:', clickedAnnotation);\n    }\n  };\n\n  const handleCanvasClick = (e: React.MouseEvent<HTMLCanvasElement>) => {\n    if (selectedTool === 'select') {\n      handleAnnotationClick(e);\n    } else if (selectedTool === 'sam_point') {\n      const mousePos = getMousePos(e);\n      const imagePos = canvasToImageCoords(mousePos.x, mousePos.y);\n      console.log('SAM point clicked at:', imagePos);\n      // TODO: Implement SAM point functionality\n    }\n  };\n\n  return (\n    <div style={{ \n      border: '1px solid #ccc', \n      borderRadius: '4px', \n      overflow: 'hidden',\n      backgroundColor: '#f0f0f0',\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '0.5rem',\n      padding: '1rem',\n      flex: 1,\n      minHeight: 0\n    }}>\n      <div style={{\n        textAlign: 'center',\n        color: '#666',\n        flexShrink: 0\n      }}>\n        <h3 style={{ margin: '0 0 1rem 0' }}>Interactive Canvas</h3>\n        <p style={{ margin: '0 0 1rem 0' }}>\n          Selected Tool: <strong>{selectedTool.replace('_', ' ').toUpperCase()}</strong>\n        </p>\n        {selectedTool === 'bounding_box' && (\n          <p style={{ margin: '0 0 1rem 0', fontSize: '0.9rem', color: '#555' }}>\n            Click and drag to draw a bounding box\n          </p>\n        )}\n      </div>\n      \n      <div style={{ \n        flex: 1, \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center',\n        minHeight: 0,\n        overflow: 'hidden'\n      }}>\n        <canvas\n          ref={canvasRef}\n          width={800}\n          height={600}\n          style={{\n            border: '2px solid #ddd',\n            borderRadius: '8px',\n            backgroundColor: '#fff',\n            cursor: selectedTool === 'bounding_box' ? 'crosshair' : \n                    selectedTool === 'sam_point' ? 'pointer' : 'default',\n            maxWidth: '100%',\n            maxHeight: '100%',\n            objectFit: 'contain'\n          }}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onClick={handleCanvasClick}\n        />\n      </div>\n      \n      <div style={{ textAlign: 'center', flexShrink: 0 }}>\n        <p style={{ margin: '0', fontSize: '0.9rem', color: '#666' }}>\n          Annotations: {annotations.length}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageCanvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}