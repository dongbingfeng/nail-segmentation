{"ast":null,"code":"var _jsxFileName = \"/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/LabelingInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport ToolPalette from './ToolPalette';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LabelingInterface = ({\n  imageId\n}) => {\n  _s();\n  const [selectedTool, setSelectedTool] = useState('select');\n  const [annotations, setAnnotations] = useState([]);\n  const [imageData, setImageData] = useState(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load image data and annotations\n  useEffect(() => {\n    const loadImageData = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Simulate API call for now - will be replaced with actual API\n        const mockImageData = {\n          id: '001',\n          filename: 'SizectorS_Snapshot.bmp',\n          url: '/images/SizectorS_Snapshot.bmp',\n          width: 1236,\n          height: 1032,\n          annotations: [],\n          uploadedAt: new Date().toISOString()\n        };\n        setImageData(mockImageData);\n        setAnnotations(mockImageData.annotations);\n      } catch (err) {\n        setError('Failed to load image data');\n        console.error('Error loading image data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (imageId) {\n      loadImageData();\n    }\n  }, [imageId]);\n  const handleToolSelect = tool => {\n    setSelectedTool(tool);\n  };\n  const handleAnnotationCreate = async annotationData => {\n    try {\n      // Generate temporary ID for now - will be replaced with API response\n      const newAnnotation = {\n        ...annotationData,\n        id: `temp-${Date.now()}`,\n        imageId: imageId,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setAnnotations(prev => [...prev, newAnnotation]);\n\n      // TODO: Send to API\n      console.log('Created annotation:', newAnnotation);\n    } catch (err) {\n      setError('Failed to create annotation');\n      console.error('Error creating annotation:', err);\n    }\n  };\n  const handleAnnotationUpdate = async (id, updates) => {\n    try {\n      setAnnotations(prev => prev.map(annotation => annotation.id === id ? {\n        ...annotation,\n        ...updates,\n        updatedAt: new Date().toISOString()\n      } : annotation));\n\n      // TODO: Send to API\n      console.log('Updated annotation:', id, updates);\n    } catch (err) {\n      setError('Failed to update annotation');\n      console.error('Error updating annotation:', err);\n    }\n  };\n  const handleAnnotationDelete = async id => {\n    try {\n      setAnnotations(prev => prev.filter(annotation => annotation.id !== id));\n\n      // TODO: Send to API\n      console.log('Deleted annotation:', id);\n    } catch (err) {\n      setError('Failed to delete annotation');\n      console.error('Error deleting annotation:', err);\n    }\n  };\n  const handleSamProcess = async () => {\n    setIsProcessing(true);\n    try {\n      // TODO: Implement SAM processing\n      console.log('Processing with SAM...');\n\n      // Simulate processing delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n\n      // Mock SAM result\n      const samAnnotation = {\n        id: `sam-${Date.now()}`,\n        imageId: imageId,\n        type: 'segmentation',\n        coordinates: {\n          x: 100,\n          y: 100,\n          points: [{\n            x: 100,\n            y: 100\n          }, {\n            x: 200,\n            y: 100\n          }, {\n            x: 200,\n            y: 200\n          }, {\n            x: 100,\n            y: 200\n          }]\n        },\n        label: 'nail-sam',\n        confidence: 0.95,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString()\n      };\n      setAnnotations(prev => [...prev, samAnnotation]);\n    } catch (err) {\n      setError('Failed to process with SAM');\n      console.error('Error processing with SAM:', err);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '400px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading image...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        borderRadius: '8px',\n        border: '1px solid #ef5350'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        style: {\n          padding: '0.5rem 1rem',\n          backgroundColor: '#1976d2',\n          color: 'white',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        },\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n  if (!imageData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        textAlign: 'center',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      },\n      children: \"No image data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '1rem',\n      padding: '1rem',\n      height: 'calc(100vh - 2rem)',\n      // Full viewport height minus padding\n      maxHeight: 'calc(100vh - 2rem)',\n      maxWidth: 'calc(100vw)',\n      // 2x larger than viewport width\n      overflow: 'auto',\n      // Allow scrolling if content exceeds viewport\n      margin: '0 auto' // Center the interface\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '320px',\n        flexShrink: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(ToolPalette, {\n        selectedTool: selectedTool,\n        onToolSelect: handleToolSelect,\n        onSamProcess: handleSamProcess,\n        isProcessing: isProcessing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          padding: '1rem',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          marginTop: '1rem',\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 1rem 0',\n            fontSize: '1.1rem',\n            color: '#333'\n          },\n          children: [\"Annotations (\", annotations.length, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), annotations.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            fontSize: '0.9rem',\n            margin: 0\n          },\n          children: \"No annotations yet. Use the tools above to create some.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: 1,\n            overflowY: 'auto',\n            minHeight: 0\n          },\n          children: annotations.map((annotation, index) => {\n            var _annotation$coordinat;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                padding: '0.5rem',\n                marginBottom: '0.5rem',\n                backgroundColor: '#fff',\n                borderRadius: '4px',\n                border: '1px solid #ddd',\n                fontSize: '0.9rem'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold',\n                  marginBottom: '0.25rem'\n                },\n                children: [annotation.type === 'bounding_box' ? 'ðŸ“¦' : 'ðŸŽ¯', \" \", annotation.label]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: '#666',\n                  fontSize: '0.8rem'\n                },\n                children: [annotation.type === 'bounding_box' ? `${Math.round(annotation.coordinates.x)}, ${Math.round(annotation.coordinates.y)} - ${Math.round(annotation.coordinates.width || 0)}Ã—${Math.round(annotation.coordinates.height || 0)}` : `${((_annotation$coordinat = annotation.coordinates.points) === null || _annotation$coordinat === void 0 ? void 0 : _annotation$coordinat.length) || 0} points`, annotation.confidence && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [\" (conf: \", Math.round(annotation.confidence * 100), \"%)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAnnotationDelete(annotation.id),\n                style: {\n                  marginTop: '0.25rem',\n                  padding: '0.25rem 0.5rem',\n                  backgroundColor: '#ff4444',\n                  color: 'white',\n                  border: 'none',\n                  borderRadius: '3px',\n                  fontSize: '0.8rem',\n                  cursor: 'pointer'\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 19\n              }, this)]\n            }, annotation.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0,\n        // Allow flex item to shrink below content size\n        height: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1rem',\n          padding: '0.75rem 1rem',\n          backgroundColor: '#e3f2fd',\n          borderRadius: '6px',\n          border: '1px solid #1976d2',\n          flexShrink: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: '#1976d2'\n          },\n          children: imageData.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            fontSize: '0.9rem',\n            color: '#1565c0'\n          },\n          children: [\"Current tool: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: selectedTool.replace('_', ' ').toUpperCase()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageCanvas, {\n        imageUrl: imageData.url,\n        annotations: annotations,\n        selectedTool: selectedTool,\n        onAnnotationCreate: handleAnnotationCreate,\n        onAnnotationUpdate: handleAnnotationUpdate,\n        onAnnotationDelete: handleAnnotationDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(LabelingInterface, \"V24dcOEjmVHRAljldesPb/RhM+A=\");\n_c = LabelingInterface;\nexport default LabelingInterface;\nvar _c;\n$RefreshReg$(_c, \"LabelingInterface\");","map":{"version":3,"names":["React","useState","useEffect","ImageCanvas","ToolPalette","jsxDEV","_jsxDEV","LabelingInterface","imageId","_s","selectedTool","setSelectedTool","annotations","setAnnotations","imageData","setImageData","isProcessing","setIsProcessing","loading","setLoading","error","setError","loadImageData","mockImageData","id","filename","url","width","height","uploadedAt","Date","toISOString","err","console","handleToolSelect","tool","handleAnnotationCreate","annotationData","newAnnotation","now","createdAt","updatedAt","prev","log","handleAnnotationUpdate","updates","map","annotation","handleAnnotationDelete","filter","handleSamProcess","Promise","resolve","setTimeout","samAnnotation","type","coordinates","x","y","points","label","confidence","style","display","justifyContent","alignItems","backgroundColor","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","padding","textAlign","color","border","onClick","window","location","reload","cursor","gap","maxHeight","maxWidth","overflow","margin","flexShrink","flexDirection","overflowY","onToolSelect","onSamProcess","boxShadow","marginTop","flex","minHeight","fontSize","length","index","_annotation$coordinat","marginBottom","fontWeight","Math","round","minWidth","replace","toUpperCase","imageUrl","onAnnotationCreate","onAnnotationUpdate","onAnnotationDelete","_c","$RefreshReg$"],"sources":["/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/LabelingInterface.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ImageCanvas from './ImageCanvas';\nimport ToolPalette from './ToolPalette';\nimport { Annotation, ImageData } from '../types/annotations';\n\ninterface LabelingInterfaceProps {\n  imageId: string;\n}\n\nconst LabelingInterface: React.FC<LabelingInterfaceProps> = ({ imageId }) => {\n  const [selectedTool, setSelectedTool] = useState<'select' | 'bounding_box' | 'sam_point'>('select');\n  const [annotations, setAnnotations] = useState<Annotation[]>([]);\n  const [imageData, setImageData] = useState<ImageData | null>(null);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  // Load image data and annotations\n  useEffect(() => {\n    const loadImageData = async () => {\n      setLoading(true);\n      setError(null);\n      \n      try {\n        // Simulate API call for now - will be replaced with actual API\n        const mockImageData: ImageData = {\n          id: '001',\n          filename: 'SizectorS_Snapshot.bmp',\n          url: '/images/SizectorS_Snapshot.bmp',\n          width: 1236,\n          height: 1032,\n          annotations: [],\n          uploadedAt: new Date().toISOString(),\n        };\n        \n        setImageData(mockImageData);\n        setAnnotations(mockImageData.annotations);\n      } catch (err) {\n        setError('Failed to load image data');\n        console.error('Error loading image data:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (imageId) {\n      loadImageData();\n    }\n  }, [imageId]);\n\n  const handleToolSelect = (tool: string) => {\n    setSelectedTool(tool as 'select' | 'bounding_box' | 'sam_point');\n  };\n\n  const handleAnnotationCreate = async (annotationData: Omit<Annotation, 'id' | 'createdAt' | 'updatedAt'>) => {\n    try {\n      // Generate temporary ID for now - will be replaced with API response\n      const newAnnotation: Annotation = {\n        ...annotationData,\n        id: `temp-${Date.now()}`,\n        imageId: imageId,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n\n      setAnnotations(prev => [...prev, newAnnotation]);\n      \n      // TODO: Send to API\n      console.log('Created annotation:', newAnnotation);\n    } catch (err) {\n      setError('Failed to create annotation');\n      console.error('Error creating annotation:', err);\n    }\n  };\n\n  const handleAnnotationUpdate = async (id: string, updates: Partial<Annotation>) => {\n    try {\n      setAnnotations(prev => \n        prev.map(annotation => \n          annotation.id === id \n            ? { ...annotation, ...updates, updatedAt: new Date().toISOString() }\n            : annotation\n        )\n      );\n      \n      // TODO: Send to API\n      console.log('Updated annotation:', id, updates);\n    } catch (err) {\n      setError('Failed to update annotation');\n      console.error('Error updating annotation:', err);\n    }\n  };\n\n  const handleAnnotationDelete = async (id: string) => {\n    try {\n      setAnnotations(prev => prev.filter(annotation => annotation.id !== id));\n      \n      // TODO: Send to API\n      console.log('Deleted annotation:', id);\n    } catch (err) {\n      setError('Failed to delete annotation');\n      console.error('Error deleting annotation:', err);\n    }\n  };\n\n  const handleSamProcess = async () => {\n    setIsProcessing(true);\n    try {\n      // TODO: Implement SAM processing\n      console.log('Processing with SAM...');\n      \n      // Simulate processing delay\n      await new Promise(resolve => setTimeout(resolve, 2000));\n      \n      // Mock SAM result\n      const samAnnotation: Annotation = {\n        id: `sam-${Date.now()}`,\n        imageId: imageId,\n        type: 'segmentation',\n        coordinates: {\n          x: 100,\n          y: 100,\n          points: [\n            { x: 100, y: 100 },\n            { x: 200, y: 100 },\n            { x: 200, y: 200 },\n            { x: 100, y: 200 },\n          ],\n        },\n        label: 'nail-sam',\n        confidence: 0.95,\n        createdAt: new Date().toISOString(),\n        updatedAt: new Date().toISOString(),\n      };\n      \n      setAnnotations(prev => [...prev, samAnnotation]);\n    } catch (err) {\n      setError('Failed to process with SAM');\n      console.error('Error processing with SAM:', err);\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        height: '400px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        <div>Loading image...</div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{ \n        padding: '2rem', \n        textAlign: 'center',\n        backgroundColor: '#ffebee',\n        color: '#c62828',\n        borderRadius: '8px',\n        border: '1px solid #ef5350'\n      }}>\n        <h3>Error</h3>\n        <p>{error}</p>\n        <button \n          onClick={() => window.location.reload()}\n          style={{\n            padding: '0.5rem 1rem',\n            backgroundColor: '#1976d2',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          }}\n        >\n          Retry\n        </button>\n      </div>\n    );\n  }\n\n  if (!imageData) {\n    return (\n      <div style={{ \n        padding: '2rem', \n        textAlign: 'center',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '8px'\n      }}>\n        No image data available\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      display: 'flex', \n      gap: '1rem', \n      padding: '1rem',\n      height: 'calc(100vh - 2rem)', // Full viewport height minus padding\n      maxHeight: 'calc(100vh - 2rem)',\n      maxWidth: 'calc(100vw)', // 2x larger than viewport width\n      overflow: 'auto', // Allow scrolling if content exceeds viewport\n      margin: '0 auto' // Center the interface\n    }}>\n      {/* Left Panel - Tools */}\n      <div style={{ \n        width: '320px', \n        flexShrink: 0,\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        overflowY: 'auto'\n      }}>\n        <ToolPalette\n          selectedTool={selectedTool}\n          onToolSelect={handleToolSelect}\n          onSamProcess={handleSamProcess}\n          isProcessing={isProcessing}\n        />\n        \n        {/* Annotations List */}\n        <div style={{\n          backgroundColor: '#f8f9fa',\n          borderRadius: '8px',\n          padding: '1rem',\n          boxShadow: '0 2px 4px rgba(0,0,0,0.1)',\n          marginTop: '1rem',\n          flex: 1,\n          display: 'flex',\n          flexDirection: 'column',\n          minHeight: 0\n        }}>\n          <h3 style={{ \n            margin: '0 0 1rem 0', \n            fontSize: '1.1rem', \n            color: '#333' \n          }}>\n            Annotations ({annotations.length})\n          </h3>\n          \n          {annotations.length === 0 ? (\n            <p style={{ \n              color: '#666', \n              fontSize: '0.9rem',\n              margin: 0 \n            }}>\n              No annotations yet. Use the tools above to create some.\n            </p>\n          ) : (\n            <div style={{ flex: 1, overflowY: 'auto', minHeight: 0 }}>\n              {annotations.map((annotation, index) => (\n                <div \n                  key={annotation.id}\n                  style={{\n                    padding: '0.5rem',\n                    marginBottom: '0.5rem',\n                    backgroundColor: '#fff',\n                    borderRadius: '4px',\n                    border: '1px solid #ddd',\n                    fontSize: '0.9rem'\n                  }}\n                >\n                  <div style={{ fontWeight: 'bold', marginBottom: '0.25rem' }}>\n                    {annotation.type === 'bounding_box' ? 'ðŸ“¦' : 'ðŸŽ¯'} {annotation.label}\n                  </div>\n                  <div style={{ color: '#666', fontSize: '0.8rem' }}>\n                    {annotation.type === 'bounding_box' \n                      ? `${Math.round(annotation.coordinates.x)}, ${Math.round(annotation.coordinates.y)} - ${Math.round(annotation.coordinates.width || 0)}Ã—${Math.round(annotation.coordinates.height || 0)}`\n                      : `${annotation.coordinates.points?.length || 0} points`\n                    }\n                    {annotation.confidence && (\n                      <span> (conf: {Math.round(annotation.confidence * 100)}%)</span>\n                    )}\n                  </div>\n                  <button\n                    onClick={() => handleAnnotationDelete(annotation.id)}\n                    style={{\n                      marginTop: '0.25rem',\n                      padding: '0.25rem 0.5rem',\n                      backgroundColor: '#ff4444',\n                      color: 'white',\n                      border: 'none',\n                      borderRadius: '3px',\n                      fontSize: '0.8rem',\n                      cursor: 'pointer'\n                    }}\n                  >\n                    Delete\n                  </button>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Right Panel - Canvas */}\n      <div style={{ \n        flex: 1,\n        display: 'flex',\n        flexDirection: 'column',\n        minWidth: 0, // Allow flex item to shrink below content size\n        height: '100%'\n      }}>\n        <div style={{ \n          marginBottom: '1rem',\n          padding: '0.75rem 1rem',\n          backgroundColor: '#e3f2fd',\n          borderRadius: '6px',\n          border: '1px solid #1976d2',\n          flexShrink: 0\n        }}>\n          <h2 style={{ margin: '0 0 0.5rem 0', color: '#1976d2' }}>\n            {imageData.filename}\n          </h2>\n          <p style={{ margin: 0, fontSize: '0.9rem', color: '#1565c0' }}>\n            Current tool: <strong>{selectedTool.replace('_', ' ').toUpperCase()}</strong>\n          </p>\n        </div>\n\n        <ImageCanvas\n          imageUrl={imageData.url}\n          annotations={annotations}\n          selectedTool={selectedTool}\n          onAnnotationCreate={handleAnnotationCreate}\n          onAnnotationUpdate={handleAnnotationUpdate}\n          onAnnotationDelete={handleAnnotationDelete}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default LabelingInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}