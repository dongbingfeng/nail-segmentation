{"ast":null,"code":"var _jsxFileName = \"/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/DemoInterface.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useImageNavigation } from '../contexts/ImageNavigationContext';\nimport ImageCanvas from './ImageCanvas';\nimport unetService from '../services/unetService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoInterface = () => {\n  _s();\n  const {\n    currentImageData,\n    isLoading,\n    error\n  } = useImageNavigation();\n  const [maskData, setMaskData] = useState(null);\n  const [isSegmenting, setIsSegmenting] = useState(false);\n  const [segmentationError, setSegmentationError] = useState(null);\n  const [segmentationTime, setSegmentationTime] = useState(null);\n  const handleSegmentImage = async () => {\n    if (!currentImageData) {\n      setSegmentationError('No image loaded');\n      return;\n    }\n    setIsSegmenting(true);\n    setSegmentationError(null);\n    setSegmentationTime(null);\n    try {\n      // Convert image URL to base64\n      const base64Image = await unetService.imageUrlToBase64(currentImageData.url);\n\n      // Call U-Net segmentation API\n      const response = await unetService.segmentImage({\n        image_data: base64Image,\n        threshold: 0.5,\n        return_visualizations: false\n      });\n      if (response.success && response.mask_data) {\n        setMaskData(response.mask_data);\n        setSegmentationTime(response.processing_time_ms || null);\n      } else {\n        throw new Error('Segmentation failed: No mask data returned');\n      }\n    } catch (error) {\n      console.error('Segmentation error:', error);\n      setSegmentationError(error instanceof Error ? error.message : 'Segmentation failed');\n    } finally {\n      setIsSegmenting(false);\n    }\n  };\n  const clearMask = () => {\n    setMaskData(null);\n    setSegmentationError(null);\n    setSegmentationTime(null);\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '400px',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '40px',\n            height: '40px',\n            border: '4px solid #f3f3f3',\n            borderTop: '4px solid #007bff',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto 1rem'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: '#666',\n            margin: 0\n          },\n          children: \"Loading image...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '8px',\n        color: '#721c24'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 1rem 0'\n        },\n        children: \"Error Loading Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n  if (!currentImageData) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '2rem',\n        backgroundColor: '#fff3cd',\n        border: '1px solid #ffeaa7',\n        borderRadius: '8px',\n        color: '#856404',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          margin: '0 0 1rem 0'\n        },\n        children: \"No Image Available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: 0\n        },\n        children: \"Please ensure images are loaded in the system.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem',\n      padding: '1rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#fff',\n        padding: '1rem',\n        borderRadius: '8px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        gap: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: '0 0 0.5rem 0',\n            color: '#333'\n          },\n          children: currentImageData.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            margin: 0,\n            color: '#666',\n            fontSize: '0.9rem'\n          },\n          children: [\"Size: \", currentImageData.width, \" \\xD7 \", currentImageData.height, \"px\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '0.5rem',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSegmentImage,\n          disabled: isSegmenting,\n          style: {\n            padding: '0.75rem 1.5rem',\n            backgroundColor: isSegmenting ? '#6c757d' : '#007bff',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: isSegmenting ? 'not-allowed' : 'pointer',\n            fontSize: '1rem',\n            fontWeight: '500',\n            transition: 'background-color 0.2s'\n          },\n          children: isSegmenting ? 'Segmenting...' : 'Segment Image'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), maskData && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearMask,\n          style: {\n            padding: '0.75rem 1rem',\n            backgroundColor: '#6c757d',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: 'pointer',\n            fontSize: '1rem'\n          },\n          children: \"Clear Mask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), segmentationError && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '1rem',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '8px',\n        color: '#721c24'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Segmentation Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), \" \", segmentationError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }, this), maskData && segmentationTime && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: '1rem',\n        backgroundColor: '#d4edda',\n        border: '1px solid #c3e6cb',\n        borderRadius: '8px',\n        color: '#155724'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Segmentation Complete!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), \" Processing time: \", segmentationTime.toFixed(1), \"ms\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#fff',\n        borderRadius: '8px',\n        border: '1px solid #ddd',\n        overflow: 'hidden'\n      },\n      children: /*#__PURE__*/_jsxDEV(ImageCanvas, {\n        imageUrl: currentImageData.url,\n        annotations: [],\n        selectedTool: \"select\",\n        onAnnotationCreate: () => {},\n        onAnnotationUpdate: () => {},\n        onAnnotationDelete: () => {},\n        maskData: maskData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: '#f8f9fa',\n        padding: '1rem',\n        borderRadius: '8px',\n        border: '1px solid #dee2e6'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        style: {\n          margin: '0 0 0.5rem 0',\n          color: '#495057'\n        },\n        children: \"How to use:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        style: {\n          margin: 0,\n          paddingLeft: '1.2rem',\n          color: '#6c757d'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Use the navigation controls to browse through images\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click \\\"Segment Image\\\" to run nail segmentation on the current image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"The segmentation mask will appear as a semi-transparent overlay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Click \\\"Clear Mask\\\" to remove the overlay and try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n};\n_s(DemoInterface, \"klPCje3hTIcPMEXW2sQG0+yKNok=\", false, function () {\n  return [useImageNavigation];\n});\n_c = DemoInterface;\nexport default DemoInterface;\nvar _c;\n$RefreshReg$(_c, \"DemoInterface\");","map":{"version":3,"names":["React","useState","useImageNavigation","ImageCanvas","unetService","jsxDEV","_jsxDEV","DemoInterface","_s","currentImageData","isLoading","error","maskData","setMaskData","isSegmenting","setIsSegmenting","segmentationError","setSegmentationError","segmentationTime","setSegmentationTime","handleSegmentImage","base64Image","imageUrlToBase64","url","response","segmentImage","image_data","threshold","return_visualizations","success","mask_data","processing_time_ms","Error","console","message","clearMask","style","display","justifyContent","alignItems","minHeight","backgroundColor","borderRadius","children","textAlign","width","height","border","borderTop","animation","margin","fileName","_jsxFileName","lineNumber","columnNumber","color","padding","flexDirection","gap","flexWrap","filename","fontSize","onClick","disabled","cursor","fontWeight","transition","toFixed","overflow","imageUrl","annotations","selectedTool","onAnnotationCreate","onAnnotationUpdate","onAnnotationDelete","paddingLeft","_c","$RefreshReg$"],"sources":["/Users/dongbingfeng/code/cursor_learn/nail-segmentation/frontend/src/components/DemoInterface.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useImageNavigation } from '../contexts/ImageNavigationContext';\nimport ImageCanvas from './ImageCanvas';\nimport unetService from '../services/unetService';\n\nconst DemoInterface: React.FC = () => {\n  const { currentImageData, isLoading, error } = useImageNavigation();\n  const [maskData, setMaskData] = useState<string | null>(null);\n  const [isSegmenting, setIsSegmenting] = useState(false);\n  const [segmentationError, setSegmentationError] = useState<string | null>(null);\n  const [segmentationTime, setSegmentationTime] = useState<number | null>(null);\n\n  const handleSegmentImage = async () => {\n    if (!currentImageData) {\n      setSegmentationError('No image loaded');\n      return;\n    }\n\n    setIsSegmenting(true);\n    setSegmentationError(null);\n    setSegmentationTime(null);\n\n    try {\n      // Convert image URL to base64\n      const base64Image = await unetService.imageUrlToBase64(currentImageData.url);\n      \n      // Call U-Net segmentation API\n      const response = await unetService.segmentImage({\n        image_data: base64Image,\n        threshold: 0.5,\n        return_visualizations: false\n      });\n\n      if (response.success && response.mask_data) {\n        setMaskData(response.mask_data);\n        setSegmentationTime(response.processing_time_ms || null);\n      } else {\n        throw new Error('Segmentation failed: No mask data returned');\n      }\n    } catch (error) {\n      console.error('Segmentation error:', error);\n      setSegmentationError(\n        error instanceof Error ? error.message : 'Segmentation failed'\n      );\n    } finally {\n      setIsSegmenting(false);\n    }\n  };\n\n  const clearMask = () => {\n    setMaskData(null);\n    setSegmentationError(null);\n    setSegmentationTime(null);\n  };\n\n  if (isLoading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        minHeight: '400px',\n        backgroundColor: '#f8f9fa',\n        borderRadius: '8px'\n      }}>\n        <div style={{ textAlign: 'center' }}>\n          <div style={{ \n            width: '40px', \n            height: '40px', \n            border: '4px solid #f3f3f3',\n            borderTop: '4px solid #007bff',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto 1rem'\n          }} />\n          <p style={{ color: '#666', margin: 0 }}>Loading image...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div style={{ \n        padding: '2rem',\n        backgroundColor: '#f8d7da',\n        border: '1px solid #f5c6cb',\n        borderRadius: '8px',\n        color: '#721c24'\n      }}>\n        <h3 style={{ margin: '0 0 1rem 0' }}>Error Loading Image</h3>\n        <p style={{ margin: 0 }}>{error}</p>\n      </div>\n    );\n  }\n\n  if (!currentImageData) {\n    return (\n      <div style={{ \n        padding: '2rem',\n        backgroundColor: '#fff3cd',\n        border: '1px solid #ffeaa7',\n        borderRadius: '8px',\n        color: '#856404',\n        textAlign: 'center'\n      }}>\n        <h3 style={{ margin: '0 0 1rem 0' }}>No Image Available</h3>\n        <p style={{ margin: 0 }}>Please ensure images are loaded in the system.</p>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ \n      display: 'flex',\n      flexDirection: 'column',\n      gap: '1rem',\n      padding: '1rem'\n    }}>\n      {/* Control Panel */}\n      <div style={{\n        backgroundColor: '#fff',\n        padding: '1rem',\n        borderRadius: '8px',\n        border: '1px solid #ddd',\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        flexWrap: 'wrap',\n        gap: '1rem'\n      }}>\n        <div>\n          <h3 style={{ margin: '0 0 0.5rem 0', color: '#333' }}>\n            {currentImageData.filename}\n          </h3>\n          <p style={{ margin: 0, color: '#666', fontSize: '0.9rem' }}>\n            Size: {currentImageData.width} × {currentImageData.height}px\n          </p>\n        </div>\n        \n        <div style={{ display: 'flex', gap: '0.5rem', alignItems: 'center' }}>\n          <button\n            onClick={handleSegmentImage}\n            disabled={isSegmenting}\n            style={{\n              padding: '0.75rem 1.5rem',\n              backgroundColor: isSegmenting ? '#6c757d' : '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '6px',\n              cursor: isSegmenting ? 'not-allowed' : 'pointer',\n              fontSize: '1rem',\n              fontWeight: '500',\n              transition: 'background-color 0.2s'\n            }}\n          >\n            {isSegmenting ? 'Segmenting...' : 'Segment Image'}\n          </button>\n          \n          {maskData && (\n            <button\n              onClick={clearMask}\n              style={{\n                padding: '0.75rem 1rem',\n                backgroundColor: '#6c757d',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                cursor: 'pointer',\n                fontSize: '1rem'\n              }}\n            >\n              Clear Mask\n            </button>\n          )}\n        </div>\n      </div>\n\n      {/* Status Messages */}\n      {segmentationError && (\n        <div style={{\n          padding: '1rem',\n          backgroundColor: '#f8d7da',\n          border: '1px solid #f5c6cb',\n          borderRadius: '8px',\n          color: '#721c24'\n        }}>\n          <strong>Segmentation Error:</strong> {segmentationError}\n        </div>\n      )}\n\n      {maskData && segmentationTime && (\n        <div style={{\n          padding: '1rem',\n          backgroundColor: '#d4edda',\n          border: '1px solid #c3e6cb',\n          borderRadius: '8px',\n          color: '#155724'\n        }}>\n          <strong>Segmentation Complete!</strong> Processing time: {segmentationTime.toFixed(1)}ms\n        </div>\n      )}\n\n      {/* Image Canvas */}\n      <div style={{ \n        backgroundColor: '#fff',\n        borderRadius: '8px',\n        border: '1px solid #ddd',\n        overflow: 'hidden'\n      }}>\n        <ImageCanvas\n          imageUrl={currentImageData.url}\n          annotations={[]}\n          selectedTool=\"select\"\n          onAnnotationCreate={() => {}}\n          onAnnotationUpdate={() => {}}\n          onAnnotationDelete={() => {}}\n          maskData={maskData}\n        />\n      </div>\n\n      {/* Instructions */}\n      <div style={{\n        backgroundColor: '#f8f9fa',\n        padding: '1rem',\n        borderRadius: '8px',\n        border: '1px solid #dee2e6'\n      }}>\n        <h4 style={{ margin: '0 0 0.5rem 0', color: '#495057' }}>How to use:</h4>\n        <ol style={{ margin: 0, paddingLeft: '1.2rem', color: '#6c757d' }}>\n          <li>Use the navigation controls to browse through images</li>\n          <li>Click \"Segment Image\" to run nail segmentation on the current image</li>\n          <li>The segmentation mask will appear as a semi-transparent overlay</li>\n          <li>Click \"Clear Mask\" to remove the overlay and try again</li>\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default DemoInterface; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}