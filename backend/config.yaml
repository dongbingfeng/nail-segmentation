# U-Net Serving Configuration
# This file configures the U-Net model serving system

unet:
  model:
    # Checkpoint configuration
    checkpoint_dir: "./models/unet/checkpoints/"
    model_variant: "standard"  # Options: standard, lightweight, deep
    device: "auto"  # Options: auto, cuda, cpu
    fallback_to_cpu: true
    
    # Model loading preferences (not used for now)
    #preferred_checkpoint_names: ["best", "final", "latest"]
    #supported_extensions: [".pth", ".pt", ".ckpt"]
    
  preprocessing:
    # Image preprocessing settings (must match training configuration)
    image_size: [256, 256]
    normalize: true
    mean: [0.485, 0.456, 0.406]  # ImageNet mean for transfer learning
    std: [0.229, 0.224, 0.225]   # ImageNet std for transfer learning
    
    # Input validation (not used for now)
    #max_image_size: [2048, 2048]
    #min_image_size: [64, 64]
    #supported_formats: ["JPEG", "PNG", "BMP", "TIFF"]
    
  inference:
    # Inference configuration
    batch_size: 8
    threshold: 0.5
    enable_confidence: true
    enable_batch_processing: true
    
    # Performance settings
    max_concurrent_requests: 10
    inference_timeout_seconds: 30
    
  postprocessing:
    # Mask refinement settings
    enable_mask_refinement: true
    min_component_area_ratio: 0.001  # Minimum area as ratio of image size
    morphology_kernel_size: "adaptive"  # or integer value
    
    # Output settings
    enable_contour_extraction: true
    enable_visualization_outputs: false  # Set to true for debugging
    confidence_calculation: "full"  # Options: full, basic, none
    
  memory:
    # Memory pool configuration
    pool_size_multiplier: 10
    enable_gpu_pools: true
    max_pool_size_gb: 4
    
    # Pool categories with sizes (not used for now)
    #input_pool_size: 20    # Number of input tensors to pre-allocate
    #output_pool_size: 20   # Number of output tensors to pre-allocate
    #intermediate_pool_size: 40  # Number of intermediate tensors
    
    # Memory management
    cleanup_threshold: 0.8  # Cleanup when utilization exceeds this
    #enable_memory_monitoring: true  (not used for now)
    
  health:
    # Health check configuration
    startup_validation: true
    dummy_inference_test: true
    health_check_interval: 30
    
    # Health check thresholds (not used for now)
    #memory_threshold: 0.9
    #inference_timeout_threshold: 10.0  # seconds
    #error_rate_threshold: 0.1  # 10% error rate
    
    # Health endpoints (not used for now)
    #detailed_health_info: false  # Include detailed metrics in health response
    
  logging:
    # Logging configuration specific to U-Net service
    level: "INFO"  # DEBUG, INFO, WARNING, ERROR
    enable_performance_logging: true
    enable_memory_logging: false
    log_inference_times: true
    
    # Request logging
    log_requests: false  # Set to true for debugging
    log_large_requests: true  # Log requests with large images
    large_request_threshold_mb: 5

# Server configuration
server:
  host: "0.0.0.0"
  port: 8001
  workers: 1
  
  # CORS settings
  cors:
    allow_origins: ["*"]
    allow_methods: ["GET", "POST", "PUT", "DELETE"]
    allow_headers: ["*"]
    allow_credentials: true

# Development and debugging settings  
development:
  enable_debug_endpoints: false
  save_debug_outputs: false
  debug_output_dir: "./debug_outputs/"
  
  # Performance profiling
  enable_profiling: false
  profile_output_dir: "./profiling/" 